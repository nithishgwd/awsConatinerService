AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EKS Cluster with Managed Node Group'

Parameters:

  ClusterName:
    Type: String
    Default: my-eks-cluster
    Description: Name of the EKS cluster.

  NodeGroupName:
    Type: String
    Default: my-nodegroup
    Description: Name of the managed node group.

  NodeInstanceType:
    Type: String
    Default: t2.small
    Description: EC2 instance type for managed nodes.

  NodeDesiredCapacity:
    Type: Number
    Default: 3
    Description: Desired number of nodes in the node group.

  NodeMinCapacity:
    Type: Number
    Default: 1
    Description: Minimum number of nodes in the node group.

  NodeMaxCapacity:
    Type: Number
    Default: 5
    Description: Maximum number of nodes in the node group.

Resources:

  MyEKS:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: !Ref ClusterName
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !GetAtt [NodeGroupSecurityGroup, GroupId]
        SubnetIds:
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2

  NodeGroupSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for EKS node group
      VpcId: !Ref MyVPC

  NodeGroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      ClusterName: !Ref MyEKS
      NodegroupName: !Ref NodeGroupName
      Subnets:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      InstanceTypes:
        - !Ref NodeInstanceType
      ScalingConfig:
        MinSize: !Ref NodeMinCapacity
        DesiredSize: !Ref NodeDesiredCapacity
        MaxSize: !Ref NodeMaxCapacity
      RemoteAccess:
        Ec2SshKey: 'my-key-pair'  # Replace with your SSH key
      NodeRole: !GetAtt [NodeInstanceRole, Arn]
      SecurityGroups:
        - !GetAtt [NodeGroupSecurityGroup, GroupId]

  NodeInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  # Define VPC and Subnet resources here (Public and Private subnets).

Outputs:

  EKSClusterName:
    Description: EKS Cluster Name
    Value: !Ref MyEKS

  NodegroupName:
    Description: EKS Managed Node Group Name
    Value: !Ref NodeGroupName
